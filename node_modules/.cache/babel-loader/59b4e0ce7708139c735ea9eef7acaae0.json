{"ast":null,"code":"var _jsxFileName = \"/Users/aarushg/Documents/GitHub/weather-rest-service/src/Page/WeatherPage.js\";\nimport Weather from '../components/Weather';\nimport Titles from '../components/Title';\nimport Form from '../components/Form';\nimport React from 'react';\nconst API_KEY = \"159bc8be9c9e036bd30b2cfafa755df1\";\n\nclass WeatherPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      temperature: undefined,\n      temp_min: undefined,\n      temp_max: undefined,\n      city: undefined,\n      country: undefined,\n      humidity: undefined,\n      description: undefined,\n      sunrise: undefined,\n      sunset: undefined,\n      error: undefined\n    };\n\n    this.getWeather = async event => {\n      event.preventDefault();\n      const city = event.target.elements.city.value;\n      const country = event.target.elements.country.value;\n      const api_call = await fetch(\"http://api.openweathermap.org/data/2.5/weather?q=\".concat(city, \",\").concat(country, \"&appid=\").concat(API_KEY, \"&units=metric\"));\n      const data = await api_call.json();\n\n      if (data.name === city && data.sys.country === country) {\n        this.setState({\n          temperature: data.main.temp,\n          temp_min: data.main.temp_min,\n          temp_max: data.main.temp_max,\n          city: data.name,\n          country: data.sys.country,\n          humidity: data.main.humidity,\n          description: data.weather[0].description,\n          sunrise: data.sys.sunrise,\n          sunset: data.sys.sunset,\n          error: \"\"\n        });\n      } else {\n        this.setState({\n          temperature: undefined,\n          temp_min: undefined,\n          temp_max: undefined,\n          city: undefined,\n          country: undefined,\n          humidity: undefined,\n          description: undefined,\n          sunrise: undefined,\n          sunset: undefined,\n          error: \"Please enter a City and Country.\"\n        });\n      }\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"wrapper\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"main\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"row\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"col-xs-5 title-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62\n      },\n      __self: this\n    }, React.createElement(Titles, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"col-xs-7 form-container\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Form, {\n      getWeather: this.getWeather,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(Weather, {\n      temperature: this.state.temperature,\n      temp_min: this.state.temp_min,\n      temp_max: this.state.temp_max,\n      humidity: this.state.humidity,\n      city: this.state.city,\n      country: this.state.country,\n      description: this.state.description,\n      sunrise: this.state.sunrise,\n      sunset: this.state.sunset,\n      error: this.state.error,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    })))))));\n  }\n\n}\n\n;\nexport default WeatherPage;","map":{"version":3,"sources":["/Users/aarushg/Documents/GitHub/weather-rest-service/src/Page/WeatherPage.js"],"names":["Weather","Titles","Form","React","API_KEY","WeatherPage","Component","state","temperature","undefined","temp_min","temp_max","city","country","humidity","description","sunrise","sunset","error","getWeather","event","preventDefault","target","elements","value","api_call","fetch","data","json","name","sys","setState","main","temp","weather","render"],"mappings":";AAAA,OAAOA,OAAP,MAAoB,uBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,MAAMC,OAAO,GAAG,kCAAhB;;AAEA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACtCC,KADsC,GAC9B;AACJC,MAAAA,WAAW,EAAEC,SADT;AAEJC,MAAAA,QAAQ,EAAED,SAFN;AAGJE,MAAAA,QAAQ,EAAEF,SAHN;AAIJG,MAAAA,IAAI,EAAEH,SAJF;AAKJI,MAAAA,OAAO,EAAEJ,SALL;AAMJK,MAAAA,QAAQ,EAAEL,SANN;AAOJM,MAAAA,WAAW,EAAEN,SAPT;AAQJO,MAAAA,OAAO,EAAEP,SARL;AASJQ,MAAAA,MAAM,EAAER,SATJ;AAUJS,MAAAA,KAAK,EAAET;AAVH,KAD8B;;AAAA,SAatCU,UAbsC,GAazB,MAAOC,KAAP,IAAiB;AAC1BA,MAAAA,KAAK,CAACC,cAAN;AACA,YAAMT,IAAI,GAAGQ,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBX,IAAtB,CAA2BY,KAAxC;AACA,YAAMX,OAAO,GAAGO,KAAK,CAACE,MAAN,CAAaC,QAAb,CAAsBV,OAAtB,CAA8BW,KAA9C;AACA,YAAMC,QAAQ,GAAG,MAAMC,KAAK,4DAAqDd,IAArD,cAA6DC,OAA7D,oBAA8ET,OAA9E,mBAA5B;AACA,YAAMuB,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;;AACA,UAAID,IAAI,CAACE,IAAL,KAAcjB,IAAd,IAAsBe,IAAI,CAACG,GAAL,CAASjB,OAAT,KAAqBA,OAA/C,EAAwD;AACpD,aAAKkB,QAAL,CAAc;AACVvB,UAAAA,WAAW,EAAEmB,IAAI,CAACK,IAAL,CAAUC,IADb;AAEVvB,UAAAA,QAAQ,EAAEiB,IAAI,CAACK,IAAL,CAAUtB,QAFV;AAGVC,UAAAA,QAAQ,EAAEgB,IAAI,CAACK,IAAL,CAAUrB,QAHV;AAIVC,UAAAA,IAAI,EAAEe,IAAI,CAACE,IAJD;AAKVhB,UAAAA,OAAO,EAAEc,IAAI,CAACG,GAAL,CAASjB,OALR;AAMVC,UAAAA,QAAQ,EAAEa,IAAI,CAACK,IAAL,CAAUlB,QANV;AAOVC,UAAAA,WAAW,EAAEY,IAAI,CAACO,OAAL,CAAa,CAAb,EAAgBnB,WAPnB;AAQVC,UAAAA,OAAO,EAAEW,IAAI,CAACG,GAAL,CAASd,OARR;AASVC,UAAAA,MAAM,EAAEU,IAAI,CAACG,GAAL,CAASb,MATP;AAUVC,UAAAA,KAAK,EAAE;AAVG,SAAd;AAYH,OAbD,MAaO;AACH,aAAKa,QAAL,CAAc;AACVvB,UAAAA,WAAW,EAAEC,SADH;AAEVC,UAAAA,QAAQ,EAAED,SAFA;AAGVE,UAAAA,QAAQ,EAAEF,SAHA;AAIVG,UAAAA,IAAI,EAAEH,SAJI;AAKVI,UAAAA,OAAO,EAAEJ,SALC;AAMVK,UAAAA,QAAQ,EAAEL,SANA;AAOVM,UAAAA,WAAW,EAAEN,SAPH;AAQVO,UAAAA,OAAO,EAAEP,SARC;AASVQ,UAAAA,MAAM,EAAER,SATE;AAUVS,UAAAA,KAAK,EAAE;AAVG,SAAd;AAYH;AACJ,KA9CqC;AAAA;;AA+CtCiB,EAAAA,MAAM,GAAG;AACL,WACQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAK,MAAA,SAAS,EAAC,0BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,CADJ,EAII;AAAK,MAAA,SAAS,EAAC,yBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,UAAU,EAAE,KAAKhB,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAEI,oBAAC,OAAD;AACI,MAAA,WAAW,EAAE,KAAKZ,KAAL,CAAWC,WAD5B;AAEI,MAAA,QAAQ,EAAE,KAAKD,KAAL,CAAWG,QAFzB;AAGI,MAAA,QAAQ,EAAE,KAAKH,KAAL,CAAWI,QAHzB;AAII,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWO,QAJzB;AAKI,MAAA,IAAI,EAAE,KAAKP,KAAL,CAAWK,IALrB;AAMI,MAAA,OAAO,EAAE,KAAKL,KAAL,CAAWM,OANxB;AAOI,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWQ,WAP5B;AAQI,MAAA,OAAO,EAAE,KAAKR,KAAL,CAAWS,OARxB;AASI,MAAA,MAAM,EAAE,KAAKT,KAAL,CAAWU,MATvB;AAUI,MAAA,KAAK,EAAE,KAAKV,KAAL,CAAWW,KAVtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFJ,CAJJ,CADJ,CADJ,CADJ,CAFJ,CADR;AAgCH;;AAhFqC;;AAiFzC;AAED,eAAeb,WAAf","sourcesContent":["import Weather from '../components/Weather';\nimport Titles from '../components/Title';\nimport Form from '../components/Form';\nimport React from 'react';\nconst API_KEY = \"159bc8be9c9e036bd30b2cfafa755df1\";\n\nclass WeatherPage extends React.Component {\n    state = {\n        temperature: undefined,\n        temp_min: undefined,\n        temp_max: undefined,\n        city: undefined,\n        country: undefined,\n        humidity: undefined,\n        description: undefined,\n        sunrise: undefined,\n        sunset: undefined,\n        error: undefined\n    }\n    getWeather = async (event) => {\n        event.preventDefault();\n        const city = event.target.elements.city.value;\n        const country = event.target.elements.country.value;\n        const api_call = await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${city},${country}&appid=${API_KEY}&units=metric`);\n        const data = await api_call.json();\n        if (data.name === city && data.sys.country === country) {\n            this.setState({\n                temperature: data.main.temp,\n                temp_min: data.main.temp_min,\n                temp_max: data.main.temp_max,\n                city: data.name,\n                country: data.sys.country,\n                humidity: data.main.humidity,\n                description: data.weather[0].description,\n                sunrise: data.sys.sunrise,\n                sunset: data.sys.sunset,\n                error: \"\"\n            });\n        } else {\n            this.setState({\n                temperature: undefined,\n                temp_min: undefined,\n                temp_max: undefined,\n                city: undefined,\n                country: undefined,\n                humidity: undefined,\n                description: undefined,\n                sunrise: undefined,\n                sunset: undefined,\n                error: \"Please enter a City and Country.\"\n            });\n        }\n    }\n    render() {\n        return (\n                <div>\n\n                    <div className=\"wrapper\">\n                        <div className=\"main\">\n                            <div className=\"container\">\n                                <div className=\"row\">\n                                    <div className=\"col-xs-5 title-container\">\n                                        <Titles />\n                                    </div>\n                                    <div className=\"col-xs-7 form-container\">\n                                        <Form getWeather={this.getWeather} />\n                                        <Weather\n                                            temperature={this.state.temperature}\n                                            temp_min={this.state.temp_min}\n                                            temp_max={this.state.temp_max}\n                                            humidity={this.state.humidity}\n                                            city={this.state.city}\n                                            country={this.state.country}\n                                            description={this.state.description}\n                                            sunrise={this.state.sunrise}\n                                            sunset={this.state.sunset}\n                                            error={this.state.error}\n                                        />\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n        );\n    }\n};\n\nexport default WeatherPage;"]},"metadata":{},"sourceType":"module"}